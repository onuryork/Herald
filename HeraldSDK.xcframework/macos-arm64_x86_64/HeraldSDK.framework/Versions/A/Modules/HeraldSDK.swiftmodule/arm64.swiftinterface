// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.1 (swiftlang-1200.0.41 clang-1200.0.32.8)
// swift-module-flags: -target arm64-apple-macos11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name HeraldSDK
import Combine
import Foundation
@_exported import HeraldSDK
import Swift
public enum Environment : Swift.String {
  case development
  case staging
  case production
  public typealias RawValue = Swift.String
  public init?(rawValue: Swift.String)
  public var rawValue: Swift.String {
    get
  }
}
public enum HeraldError : Swift.Error {
  case invalidToken
  case invalidDeviceID
  case serviceUnavailable
  case unknown
  public static func == (a: HeraldSDK.HeraldError, b: HeraldSDK.HeraldError) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
}
@_hasMissingDesignatedInitializers public class Herald {
  public static func push(deviceID: Swift.String, clientToken: Foundation.UUID, on environemt: HeraldSDK.Environment = .production) throws
  @objc deinit
}
extension HeraldSDK.Environment : Swift.Equatable {}
extension HeraldSDK.Environment : Swift.Hashable {}
extension HeraldSDK.Environment : Swift.RawRepresentable {}
extension HeraldSDK.HeraldError : Swift.Equatable {}
extension HeraldSDK.HeraldError : Swift.Hashable {}
